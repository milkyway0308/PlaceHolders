plugins {
    id 'java'
    id 'maven-publish'
    id 'skywolf46.wolfradle' version "1.1.3"
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id "org.sonarqube" version "3.3"
    id "jacoco"
}

version properties["version"]

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly "org.spigotmc:spigot:1.12.2"
    compileOnly "skywolf46:exutil:1.51.3"
    wolfy("skywolf46:commandannotation-core:3.0.4")
    wolfy("skywolf46:commandannotation-minecraft:3.0.4")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.7.1")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.1")
    testImplementation("org.junit.platform:junit-platform-runner:1.7.1")
}

test {
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
//        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
//
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
        }
    }
}

publishing {
    repositories {
        maven {
            name = "Reposilite"
            url(rootProject.properties["snapshot"] as Boolean ? rootProject.properties['reposilite.snapshot'] as String : rootProject.properties['reposilite.release'] as String)
            credentials {
                username rootProject.properties['reposilite.user'] as String
                password rootProject.properties['reposilite.token'] as String
            }
        }
    }
    publications {
        create("jar", MavenPublication) {
            groupId 'skywolf46'
            artifactId "placeholders-core"
            version rootProject.properties['version'] as String
            from components.java
        }
    }
}


